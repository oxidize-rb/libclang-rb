---
name: CI

on:
  - push

jobs:
  build-gem:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-output.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
      - run: rake
      - id: set-output
        run: |
          version="$(ruby -e "require \"$PWD/lib/libclang/version.rb\"; puts Libclang::VERSION")"
          echo "version=$version" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v2
        with:
          name: gem
          path: pkg/

  github-runners:
    needs: build-gem
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            ruby-version: "3.1"
            ruby-platform: "x86_64-linux"
          - os: windows-latest
            ruby-version: "3.1"
            ruby-platform: "x64-mingw32-ucrt"
          - os: macos-latest
            ruby-version: "3.1"
            ruby-platform: "x86_64-darwin"
    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - uses: actions/download-artifact@v2
        with:
          name: gem
          path: pkg/

      - name: Gem install
        shell: bash
        run: |
          gem install pkg/libclang-${{ needs.build-gem.outputs.version }}-${{ matrix.ruby-platform }}.gem

      - name: Test
        shell: bash
        run: ruby test/*.rb

  qemu:
    needs: build-gem
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - ruby-platform: "x86_64-linux"
            docker-platform: "linux/amd64"
            base-image: "ruby:3.1"
            setup: "echo OK"
          - ruby-platform: "aarch64-linux"
            docker-platform: "linux/arm64"
            base-image: "ruby:3.1"
            setup: "echo OK"
          - ruby-platform: "x86_64-linux-musl"
            docker-platform: "linux/amd64"
            base-image: "ruby:3.1-alpine"
            setup: apk update && apk add --no-cache build-base
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: gem
          path: pkg/

      - uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.docker-platform }}

      - run: |
          docker buildx create --use --name test-${{ matrix.ruby-platform }}

          docker run --platform ${{ matrix.docker-platform }} -v $PWD:/src -w /src ${{ matrix.base-image }} \
            sh -c "${{ matrix.setup }}; gem install pkg/libclang-${{ needs.build-gem.outputs.version }}-${{ matrix.ruby-platform }}.gem && ruby test/*.rb"
